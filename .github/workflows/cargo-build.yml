name: Cargo - Build

on:
  workflow_call:

env:
  CARGO_TERM_COLOR: always

jobs:
  cargo-build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    strategy:
      matrix:
        rust-version: [ stable, beta, nightly ]

    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Setup - Rust Toolchain"
        uses: dtolnay/rust-toolchain@d8352f6b1d2e870bc5716e7a6d9b65c4cc244a1a
        with:
          toolchain: ${{ matrix.rust-version }}

      - name: Restore cached Cargo 
        id: cache-restore
        if: steps.changes.outputs.src == 'true'
        uses: actions/cache/restore@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo

      - name: "Build"
        run: |
          cargo build

      - name: Save Cargo / Rust Cache 
        id: cache-save
        if: steps.changes.outputs.src == 'true'
        uses: actions/cache/save@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ steps.cache-restore.outputs.cache-primary-key }}

  cargo-lint:
    runs-on: ubuntu-latest
    needs: [ cargo-build ]
    permissions:
      contents: read

    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
      - name: "Setup - Rust Toolchain"
        uses: dtolnay/rust-toolchain@d8352f6b1d2e870bc5716e7a6d9b65c4cc244a1a
        with:
          components: clippy,rustfmt
          toolchain: ${{ matrix.rust-version }}

      - name: "Formatting Check"
        run: |
          cargo fmt --check

      - name: "Running Clippy"
        run: |
          cargo clippy --all-targets

  cargo-test:
    runs-on: ubuntu-latest
    needs: [ cargo-build ]
    permissions:
      contents: read

    strategy:
      matrix:
        rust-version: [ stable, beta, nightly ]

    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Setup - Rust Toolchain"
        uses: dtolnay/rust-toolchain@d8352f6b1d2e870bc5716e7a6d9b65c4cc244a1a
        with:
          toolchain: ${{ matrix.rust-version }}

      - name: Restore cached Cargo 
        id: cache-restore
        if: steps.changes.outputs.src == 'true'
        uses: actions/cache/restore@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo

      - name: "Run Tests"
        run: |
          cargo test
