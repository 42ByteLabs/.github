name: Conatiner Build and Release

on:
  workflow_call:
    inputs:
      version:
        description: "Version of the project"
        required: true
        type: string
      container-name:
        description: "Container image name"
        type: string
        default: "${{ github.repository }}"
      docker-file:
        description: "Docker File location"
        type: string
        default: "./Dockerfile"

env:
  REGISTRY: ghcr.io

jobs:
  build-publish-image:
    runs-on: ubuntu-latest

    outputs:
      digest: ${{ steps.build.outputs.digest }}

    permissions:
      id-token: write
      contents: write
      # to upload Docker image
      packages: write
      # to upload to GitHub Advanced Security
      security-events: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3.3.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ inputs.container-name }}
          tags: |
            # latest / main
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
            # SemVer
            type=semver,pattern={{version}},value=${{ inputs.version }}
            type=semver,pattern=v{{version}},value=${{ inputs.version }}
            type=semver,pattern=v{{major}},value=${{ inputs.version }}
            type=semver,pattern=v{{major}}.{{minor}},value=${{ inputs.version }}

      - name: Build initial ${{ inputs.container-name }} image
        uses: docker/build-push-action@v6.10.0
        with: 
          file: "${{ inputs.docker-file }}"
          context: .
          load: true
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      # Scan the image for vulnerabilities and if high severity vulnerabilities are found, fail the build
      - name: Run the Anchore / Grype scan action
        uses: anchore/scan-action@869c549e657a088dc0441b08ce4fc0ecdac2bb65 # v5.3.0
        id: scan
        with:
          image: ${{ inputs.container-name }}:latest
          only-fixed: true
          fail-build: false
          # severity-cutoff: high

      # Upload the SARIF artifact to the GitHub Advanced Security tab
      # - name: Upload SARIF artifact
      #   uses: github/codeql-action/upload-sarif@v3
      #   if: always()
      #   with:
      #     sarif_file: "${{ steps.scan.outputs.sarif }}"
      #     category: "/grype-${{ inputs.container-name }}"

      - name: Push Container ${{ inputs.container-name }}
        uses: docker/build-push-action@v6.10.0
        id: build
        with:
          file: "${{ inputs.docker-file }}"
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
