name: Conatiner Build and Release

on:
  workflow_call:
    inputs:
      version:
        description: "Version of the project"
        required: true
        type: string
      container-name:
        description: "Container image name"
        type: string
        default: "${{ github.repository }}"
      docker-file:
        description: "Docker File location"
        type: string
        default: "./Dockerfile"
      platforms:
        description: "Container platforms"
        type: string
        default: "linux/amd64,linux/arm64"

env:
  REGISTRY: ghcr.io

jobs:
  build-publish-image:
    runs-on: [self-hosted, "Linux"]

    permissions:
      id-token: write
      contents: write
      # to upload Docker image
      packages: write
      # to upload to GitHub Advanced Security
      security-events: write
      attestations: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2    #v3.10.0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392    # v3.6.0

      - name: Log in to the Container registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772    # v3.4.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804    # v5.7.0
        with:
          images: ${{ env.REGISTRY }}/${{ inputs.container-name }}
          tags: |
            # latest / main
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
            # SemVer
            type=semver,pattern={{version}},value=${{ inputs.version }}
            type=semver,pattern=v{{version}},value=${{ inputs.version }}
            type=semver,pattern=v{{major}},value=${{ inputs.version }}
            type=semver,pattern=v{{major}}.{{minor}},value=${{ inputs.version }}

      - name: Build initial ${{ inputs.container-name }} image
        uses: docker/build-push-action@14487ce63c7a62a4a324b0bfb37086795e31c6c1    #v6.16.0
        with: 
          file: "${{ inputs.docker-file }}"
          context: .
          load: true
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      # Upload Software Bill of Materials (SBOM) to GitHub
      - name: Upload SBOM
        uses: advanced-security/spdx-dependency-submission-action@5530bab9ee4bbe66420ce8280624036c77f89746  # v0.1.1
        with:
          filePath: '.'
          filePattern: '*.spdx.json'

      # Scan the image for vulnerabilities and if high severity vulnerabilities are found, fail the build
      - name: Run the Anchore / Grype scan action
        uses: anchore/scan-action@2c901ab7378897c01b8efaa2d0c9bf519cc64b9e # v6.2.0
        id: scan
        with:
          image: ${{ inputs.container-name }}:${{ steps.build.outputs.digest }}
          only-fixed: true
          fail-build: false
          # severity-cutoff: high

      # Upload the SARIF artifact to the GitHub Advanced Security tab
      # - name: Upload SARIF artifact
      #   uses: github/codeql-action/upload-sarif@v3
      #   if: always()
      #   with:
      #     sarif_file: "${{ steps.scan.outputs.sarif }}"
      #     category: "/grype-${{ inputs.container-name }}"

      - name: "Push Container ${{ inputs.container-name }}"
        uses: docker/build-push-action@14487ce63c7a62a4a324b0bfb37086795e31c6c1    #v6.16.0
        id: build
        with:
          file: "${{ inputs.docker-file }}"
          context: .
          platforms: "${{ inputs.platforms }}"
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Attest image
        uses: actions/attest-build-provenance@db473fddc028af60658334401dc6fa3ffd8669fd    # v2.3.0
        with:
          subject-name: ${{ env.REGISTRY }}/${{ inputs.container-name }}
          subject-digest: ${{ steps.build.outputs.digest }}
          push-to-registry: true
