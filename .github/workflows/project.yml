name: Get Project Information

on:
  workflow_call:
    outputs:
      version:
        description: "The current version of the project"
        value: ${{ jobs.get-info.outputs.version }}
      release:
        description: "Whether a new release is needed"
        value: ${{ jobs.get-info.outputs.release }}

jobs:
  get-info:
    runs-on: ubuntu-latest
    
    outputs:
      version: ${{ steps.get-info.outputs.version }}
      release: ${{ steps.get-info.outputs.release }}
      
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Set Project Information"
        id: get-info
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e

          if [[ -f .release.yml ]]; then
            pip install yq > /dev/null
            current_version=$(yq -r ".version" .release.yml)
            echo "💻 Current Version :: $current_version"  
            echo "version=$current_version" >> $GITHUB_OUTPUT
          elif [[ -f Cargo.toml ]]; then
            current_version=$(grep "version =" Cargo.toml | cut -d '"' -f 2)
            echo "💻 Current Version :: $current_version"
            echo "version=$current_version" >> $GITHUB_OUTPUT
          else
            echo "Failed to find version..."
            exit 1
          fi

          # Get the latest release version from GitHub
          latest_version=$(gh release list -L 1 --json name -q '.[0].name' --repo "$GITHUB_REPOSITORY")
          # If it starts with "v", remove it
          if [[ $latest_version == v* ]]; then
            latest_version=${latest_version:1}
          fi

          echo "Latest Version :: $latest_version"

          # Check if the version is outdated
          if [[ "$latest_version" == "" ]]; then
            echo "✨ No releases found... Lets get that first version out!"
            echo "release=true" >> $GITHUB_OUTPUT
          elif [[ "$latest_version" != "$current_version" ]]; then
            echo "🚀 The repository is outdated... Let's update it!"
            echo "release=true" >> $GITHUB_OUTPUT
          else
            echo "🍹 Repository is up to date. Lets sit back and relax..."
            echo "release=false" >> $GITHUB_OUTPUT
          fi


      # If Debugging is enabled, print the output
      - name: "Print Debug Information"
        if: runner.debug
        run: |
          echo "Version: ${{ steps.get-info.outputs.version }}"
          echo "Ready for release: ${{ steps.get-info.outputs.release }}"



