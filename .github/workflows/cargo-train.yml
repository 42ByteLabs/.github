name: Cargo - Train

on:
  workflow_call:
    inputs:
      schedule:
        description: "Train Release Schedule"
        type: string
        default: "1209600"  # 2 weeks
      mode:
        description: "Mode"
        type: string
        default: "patch"
      cargo:
        description: "Cargo file path"
        type: string
        default: "Cargo.toml"
      crate:
        description: "Crate name"
        type: string
        required: true

jobs:
  train:
    runs-on: ubuntu-latest

    outputs:
      release: ${{ steps.crates-check.outputs.release }}
      version: ${{ steps.crates-check.outputs.version }}

    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Check crates.io"
        id: crates-check
        run: |
          set -e

          # TODO: Auto detect name
          CRATE_NAME="${{ inputs.crate }}"
          CARGO_LOCATION="${{ inputs.cargo }}"

          current_date=$(date +%s)
          crates_remote=$(curl -s https://crates.io/api/v1/crates/$CRATE_NAME/versions | jq -r '.versions[0].created_at')
          crates_date=$(date -d "${crates_remote}" +%s)

          current_version=$(grep -oP '^version = "(.*)"$' $CARGO_LOCATION | cut -d '"' -f 2)

          echo "⏲️  Current date   :: $(date -d @${current_date})"
          echo "🦀  Crates.io date :: $(date -d @${crates_date})"

          diff=$((current_date - crates_date))
          secs="${{ inputs.schedule }}"
          echo "🔍 Difference     :: ${diff} (seconds)"
          
          if [ $diff -gt $((secs)) ]; then
            echo "🚀 The crate is outdated"
            echo "release=true" >> $GITHUB_OUTPUT
          else
            echo "👍 The crate is up to date"
            echo "release=false" >> $GITHUB_OUTPUT
          fi
          echo "version=$current_version" >> $GITHUB_OUTPUT

  release:
    runs-on: ubuntu-latest
    needs: [ train ]
    if: ${{ needs.train.outputs.release == 'true' }}
    
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: Get Token
        id: get_workflow_token
        uses: peter-murray/workflow-application-token-action@v3
        with:
          application_id: ${{ secrets.BYTELABS_APP_ID }}
          application_private_key: ${{ secrets.BYTELABS_APP_KEY }}

      - name: "Patch Release Me"
        uses: 42ByteLabs/patch-release-me@0.1.5
        with:
          mode: ${{ inputs.mode }}

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ steps.get_workflow_token.outputs.token }}
          title: "Chore: Train Release - ${{ needs.train.outputs.version }}"
          commit-message: "[chore]: Auto Patch Release"
          body: |
            This is automatically created as a chore to patch and update the release.
          branch: "auto-patch-release"
          labels: "version"
          delete-branch: true
